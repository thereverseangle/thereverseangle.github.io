"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rxjsMixin = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _esm = require("rxjs/_esm5");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // # src / rxjs.js
// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>
// Licensed under MIT

var rxjsMixin = exports.rxjsMixin = function rxjsMixin(C) {
  return function (_C) {
    _inherits(_class, _C);

    function _class() {
      _classCallCheck(this, _class);

      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
    }

    _createClass(_class, [{
      key: "setupComponent",
      value: function setupComponent(el, opts) {
        var _this2 = this;

        var sideEffects = {};

        this.subjects = {};
        this.subjects.disconnect = new _esm.Subject();
        this.subjects.document = new _esm.ReplaySubject();

        Object.keys(this.constructor.types).map(function (key) {
          _this2.subjects[key] = new _esm.ReplaySubject(1);
          sideEffects[key] = function (x) {
            return _this2.subjects[key].next(x);
          };
        });

        Object.defineProperty(this.constructor, "sideEffects", {
          get: function get() {
            return sideEffects;
          },
          set: function set() {},
          enumerable: true,
          configurable: true
        });

        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), "setupComponent", this).call(this, el, opts);
      }
    }, {
      key: "connectComponent",
      value: function connectComponent() {
        var _this3 = this;

        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), "connectComponent", this).call(this);
        this.subjects.document.next(document);
        Object.keys(this.constructor.types).map(function (key) {
          return _this3.subjects[key].next(_this3[key]);
        });
      }
    }, {
      key: "disconnectComponent",
      value: function disconnectComponent() {
        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), "disconnectComponent", this).call(this);
        this.subjects.disconnect.next({});
      }
    }, {
      key: "adaptComponent",
      value: function adaptComponent() {
        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), "adaptComponent", this).call(this);
        this.subjects.document.next(document);
      }
    }]);

    return _class;
  }(C);
};