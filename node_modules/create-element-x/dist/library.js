(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("createElementX", [], factory);
	else if(typeof exports === 'object')
		exports["createElementX"] = factory();
	else
		root["createElementX"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createElement = undefined;

var _factory = __webpack_require__(1);

var createElement = exports.createElement = (0, _factory.createCreateElement)(document.createElement.bind(document), document.createTextNode.bind(document));
exports.default = createElement;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var isArray = Array.isArray || function (arg) {
  return Object.prototype.toString.call(arg) === '[object Array]';
};
var isHTMLCollection = function isHTMLCollection(arg) {
  return Object.prototype.toString.call(arg) === '[object HTMLCollection]';
};
var isNodeList = function isNodeList(arg) {
  return Object.prototype.toString.call(arg) === '[object NodeList]';
};

var createCreateElement = exports.createCreateElement = function createCreateElement(createElement, createTextNode) {
  function appendChild(c) {
    if (typeof c === 'string') this.appendChild(createTextNode(c));else this.appendChild(c);
  }

  return function (tagName, attributes) {
    for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      children[_key - 2] = arguments[_key];
    }

    var el = createElement(tagName);

    for (var attr in attributes) {
      el.setAttribute(attr, attributes[attr]);
    } // Support old JSX sytax that wraps children in an array,
    // as 3rd parameter.
    var cs = children[0];
    var shouldCopy = void 0;
    if (isArray(cs) || (shouldCopy = isHTMLCollection(cs)) || (shouldCopy = isNodeList(cs))) {
      // In case use user provides a `NodeList` or `HTMLCollection`,
      // appening will have the effect of removing the item the current
      // collection, which in turn will cause problems which `forEach`.
      // So we create a copy frist:
      if (shouldCopy) {
        cs = Array.prototype.slice.call(cs, 0);
      }
      Array.prototype.forEach.call(cs, appendChild, el);

      // Support new JSX syntax, where each child is an additional
      // function parameter.
    } else {
      Array.prototype.forEach.call(children, function (child) {
        if (typeof child === 'string') {
          el.appendChild(createTextNode(child));
        } else {
          el.appendChild(child);
        }
      });
    }

    return el;
  };
};

exports.default = createCreateElement;

/***/ })
/******/ ]);
});
//# sourceMappingURL=library.js.map